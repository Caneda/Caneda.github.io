{"name":"Caneda","tagline":"Caneda (Circuits and Networks Electronics Design Automation) is an open source EDA software focused on easy of use and portability.","body":"Description\r\n===========\r\n\r\nCaneda is an open source EDA software focused on easy of use and portability.\r\nCaneda's goal is the complete design proccess from schematic capture, through\r\nsimulation and into circuit layout and PCB. While in the short term schematic\r\ncapture and simulation is the primary goal, in the long term future, PCB and\r\nlayout edition will be covered. The software aims to support all kinds of\r\ncircuit simulation types, e.g. DC, AC, S-parameter and harmonic balance\r\nanalysis.\r\n\r\nFor details visit the project's homepage:\r\n\r\nhttps://github.com/Caneda/Caneda\r\n\r\n\r\nRequirements\r\n============\r\n\r\nIn order to compile Caneda sources, you will need the following libraries\r\ninstalled in your system:\r\n\r\n  * Qt\r\n  * Cmake\r\n  * Qwtplot\r\n\r\n\r\nGetting the latest git snapshot\r\n===============================\r\n\r\nYou can always get the latest Caneda version from our git repository. Please\r\nuse an official release if you want to work with Caneda.  The git version might\r\nnot even compile.\r\n\r\n`$ git clone https://github.com/Caneda/Caneda`\r\n\r\n\r\nInstallation\r\n============\r\n\r\nThese are generic installation instructions.\r\n\r\nIf you need to do unusual things to compile the package, please try to figure\r\nout how _cmake_ could check whether to do them, and mail diffs or instructions\r\nto the authors so they can be considered for the next release.\r\n\r\nUnpack the distribution tarball:\r\n\r\n`$ tar xvzf caneda-<version>.tar.gz`\r\n\r\nChange into the source directory:\r\n\r\n`$ cd caneda-<version>`\r\n\r\nCreate a new directory for Cmake to work in:\r\n\r\n`$ mkdir build`\r\n\r\nChange into the recently created directory:\r\n\r\n`$ cd build`\r\n\r\nConfigure the source package for your system:\r\n\r\n`$ cmake ../`\r\n\r\nCompile the package:\r\n\r\n`$ make`\r\n\r\nInstall Caneda:\r\n\r\n`$ make install`\r\n\r\nYou must have root privileges if you want to install the package in the\r\nstandard location (`/usr/local`) or in any location that is only writable by\r\nroot.\r\n\r\nPlease note:  Users of the FreeBSD OS may use a GNU make (probably gmake) to\r\ncompile and install the package.\r\n\r\n\r\nCompilers and Options\r\n=====================\r\n\r\nSome systems require unusual options for compilation or linking that _cmake_\r\ndoes not know about.  Run `./cmake --help` for details on some of the pertinent\r\nenvironment variables.\r\n\r\nYou can give _cmake_ initial values for configuration parameters by setting\r\nvariables in the command line or in the environment.  Here is an example:\r\n\r\n`$ ./cmake CC=c89 CFLAGS=-O2 LIBS=-lposix`\r\n\r\n\r\nInstallation Directory\r\n======================\r\n\r\nBy default, _make install_ will install the package's files in\r\n`/usr/local/bin`, `/usr/local/man`, etc.  You can specify an installation\r\nprefix other than `/usr/local` by giving _cmake_ the option `--prefix=PATH`.\r\n\r\nYou can specify separate installation prefixes for architecture-specific files\r\nand architecture-independent files.  If you give _cmake_ the option\r\n`--exec-prefix=PATH`, the package will use `PATH` as the prefix for installing\r\nprograms and libraries. Documentation and other data files will still use the\r\nregular prefix.\r\n\r\nIn addition, if you use an unusual directory layout you can give options like\r\n`--bindir=PATH` to specify different values for particular kinds of files.\r\n\r\n\r\nDoxygen Documentation\r\n=====================\r\n\r\nCaneda uses Doxygen as its developers code documentation. To generate the\r\ndoxygen documentation, use the Doxyfile file provided at the source's root.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}